//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ThirdPlatformToolWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ThirdPlatformTool), typeof(System.Object));
		L.RegFunction("Authorize", Authorize);
		L.RegFunction("OnAuthResultHandler", OnAuthResultHandler);
		L.RegFunction("OnGetUserInfoResultHandler", OnGetUserInfoResultHandler);
		L.RegFunction("OnShareResultHandler", OnShareResultHandler);
		L.RegFunction("New", _CreateThirdPlatformTool);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateThirdPlatformTool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ThirdPlatformTool obj = new ThirdPlatformTool();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ThirdPlatformTool.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Authorize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			ThirdPlatformTool.Authorize(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnAuthResultHandler(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			cn.sharesdk.unity3d.ResponseState arg1 = (cn.sharesdk.unity3d.ResponseState)ToLua.CheckObject(L, 2, typeof(cn.sharesdk.unity3d.ResponseState));
			cn.sharesdk.unity3d.PlatformType arg2 = (cn.sharesdk.unity3d.PlatformType)ToLua.CheckObject(L, 3, typeof(cn.sharesdk.unity3d.PlatformType));
			System.Collections.Hashtable arg3 = (System.Collections.Hashtable)ToLua.CheckObject<System.Collections.Hashtable>(L, 4);
			ThirdPlatformTool.OnAuthResultHandler(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGetUserInfoResultHandler(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			cn.sharesdk.unity3d.ResponseState arg1 = (cn.sharesdk.unity3d.ResponseState)ToLua.CheckObject(L, 2, typeof(cn.sharesdk.unity3d.ResponseState));
			cn.sharesdk.unity3d.PlatformType arg2 = (cn.sharesdk.unity3d.PlatformType)ToLua.CheckObject(L, 3, typeof(cn.sharesdk.unity3d.PlatformType));
			System.Collections.Hashtable arg3 = (System.Collections.Hashtable)ToLua.CheckObject<System.Collections.Hashtable>(L, 4);
			ThirdPlatformTool.OnGetUserInfoResultHandler(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnShareResultHandler(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			cn.sharesdk.unity3d.ResponseState arg1 = (cn.sharesdk.unity3d.ResponseState)ToLua.CheckObject(L, 2, typeof(cn.sharesdk.unity3d.ResponseState));
			cn.sharesdk.unity3d.PlatformType arg2 = (cn.sharesdk.unity3d.PlatformType)ToLua.CheckObject(L, 3, typeof(cn.sharesdk.unity3d.PlatformType));
			System.Collections.Hashtable arg3 = (System.Collections.Hashtable)ToLua.CheckObject<System.Collections.Hashtable>(L, 4);
			ThirdPlatformTool.OnShareResultHandler(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

