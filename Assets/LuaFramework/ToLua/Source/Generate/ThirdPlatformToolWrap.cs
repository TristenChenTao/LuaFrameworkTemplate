//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ThirdPlatformToolWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ThirdPlatformTool), typeof(System.Object));
		L.RegFunction("Authorize", Authorize);
		L.RegFunction("Share", Share);
		L.RegFunction("New", _CreateThirdPlatformTool);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("_SSDK", get__SSDK, set__SSDK);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateThirdPlatformTool(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				ThirdPlatformTool obj = new ThirdPlatformTool();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: ThirdPlatformTool.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Authorize(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				ThirdPlatformTool.Authorize(arg0);
				return 0;
			}
			else if (count == 2)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				ThirdPlatformTool.Authorize(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ThirdPlatformTool.Authorize");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Share(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				cn.sharesdk.unity3d.ShareContent arg1 = (cn.sharesdk.unity3d.ShareContent)ToLua.CheckObject<cn.sharesdk.unity3d.ShareContent>(L, 2);
				ThirdPlatformTool.Share(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				cn.sharesdk.unity3d.ShareContent arg1 = (cn.sharesdk.unity3d.ShareContent)ToLua.CheckObject<cn.sharesdk.unity3d.ShareContent>(L, 2);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 3);
				ThirdPlatformTool.Share(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ThirdPlatformTool.Share");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__SSDK(IntPtr L)
	{
		try
		{
			ToLua.Push(L, ThirdPlatformTool._SSDK);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__SSDK(IntPtr L)
	{
		try
		{
			cn.sharesdk.unity3d.ShareSDK arg0 = (cn.sharesdk.unity3d.ShareSDK)ToLua.CheckObject<cn.sharesdk.unity3d.ShareSDK>(L, 2);
			ThirdPlatformTool._SSDK = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

